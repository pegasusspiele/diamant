#
# Copyright (C) 2025 Pegasus Spiele Verlags- und Medienvertriebsgesellschaft mbH
# Use of this source code is governed by an MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT.
#

version: "3.8"

services:
  traefik:
    image: traefik:v2.11
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=it@pegasus.de"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    networks:
      - proxy
      - backend

  api:
    image: api:latest
    build:
      context: ./server
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - APP_MODE=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.diamant.conspiracy-con.de`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.services.api.loadbalancer.passhostheader=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=4000"
    networks:
      - backend

  ui:
    image: ui:latest
    build:
      context: ./ui
    depends_on:
      - api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ui.rule=Host(`diamant.conspiracy-con.de`)"
      - "traefik.http.routers.ui.entrypoints=websecure"
      - "traefik.http.services.ui.loadbalancer.passhostheader=true"
      - "traefik.http.routers.ui.tls.certresolver=letsencrypt"
      - "traefik.http.services.ui.loadbalancer.server.port=3000"
    networks:
      - backend

  redis:
    image: redis:latest
    volumes:
      - redis-data:/data
    networks:
      - backend

networks:
  proxy:
  backend:
    internal: true

volumes:
  redis-data:
  letsencrypt:
